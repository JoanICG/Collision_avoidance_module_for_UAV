#include <Wire.h>
#include "vl53l0x_sensor.h"

// Definir LED para depuración visual
#define LED_BUILTIN 2  // LED integrado en ESP32

// Solo definimos umbral para el sensor inferior
#define THRESHOLD_SENSOR5 150

// Solo necesitamos esta variable para el sensor inferior
volatile bool sensor5Detected = false;

// Callback específico para el sensor inferior
void IRAM_ATTR sensor5Callback() { 
  sensor5Detected = true;
  Serial.println("¡DETECCIÓN INFERIOR!");
}

void setup() {
  Serial.begin(115200);
  delay(1000);
  
  // Configurar LED
  pinMode(LED_BUILTIN, OUTPUT);
  
  // Parpadeo inicial para indicar inicio
  for (int i = 0; i < 3; i++) {
    digitalWrite(LED_BUILTIN, HIGH);
    delay(100);
    digitalWrite(LED_BUILTIN, LOW);
    delay(100);
  }
  
  Serial.println("\n\n=== TEST DE INTERRUPCIONES - SOLO SENSOR INFERIOR ===");
  
  // Inicializar I2C
  Wire.begin();
  Wire.setClock(400000); // 400kHz para mejor rendimiento
  
  // Escanear bus I2C para ver qué dispositivos están presentes
  Serial.println("\nEscaneando bus I2C...");
  vl53l0xSensors.scanI2C();
  
  // Inicializar sensores VL53L0X - solo activaremos el sensor 5
  Serial.println("\nInicializando sensores VL53L0X...");
  if (!vl53l0xSensors.begin()) {
    Serial.println("Error al iniciar sensores VL53L0X");
    while(1) {
      digitalWrite(LED_BUILTIN, HIGH);
      delay(50);
      digitalWrite(LED_BUILTIN, LOW);
      delay(50);
    }
  }
  
  // Configurar interrupción solo para el sensor inferior
  Serial.println("\nConfigurando interrupción para sensor inferior...");
  // Debe ser exactamente así
  if (vl53l0xSensors.setupInterrupt5(THRESHOLD_SENSOR5, sensor5Callback)) {
    Serial.println("Interrupción configurada correctamente para sensor inferior");
  } else {
    Serial.println("ERROR: No se pudo configurar interrupción para sensor 5");
  }
  
  Serial.println("\nSistema listo. Esperando detecciones de objetos debajo...");
  Serial.println("Acerque objetos por debajo del sensor para probar...\n");
}

void loop() {
  // Verificar interrupción del sensor inferior
  if (sensor5Detected) {
    digitalWrite(LED_BUILTIN, HIGH);
    Serial.println("Sensor inferior detectó un objeto");
    
    // Tomar medida
    VL53L0X_RangingMeasurementData_t measure1, measure2, measure3, measure4, measure5;
    vl53l0xSensors.getMeasurement(measure1, measure2, measure3, measure4, measure5);
    
    // Mostrar distancia
    if (measure5.RangeStatus != 4) {
      Serial.print("Distancia: ");
      Serial.print(measure5.RangeMilliMeter);
      Serial.println(" mm");
    } else {
      Serial.println("Medición inválida");
    }
    
    // Limpiar flag y reiniciar medición
    sensor5Detected = false;
    vl53l0xSensors.clearSensorInterrupt(5);
    
    // Apagar LED después de procesar
    delay(200);
    digitalWrite(LED_BUILTIN, LOW);
    Serial.println("----------------------------------");
  }
  
  // Pequeña pausa para estabilidad
  delay(10);
}